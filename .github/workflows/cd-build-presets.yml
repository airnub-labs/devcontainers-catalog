name: CD - Build & Publish Preset Images

on:
  push:
    branches:
      - main
    paths:
      - "images/presets/**"
      - "Makefile"
  workflow_dispatch:

env:
  REGISTRY: ghcr.io/airnub-labs/templates
  TAG: ubuntu-24.04

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      presets: ${{ steps.changes.outputs.presets }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Detect changed presets
        id: changes
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            # Manual trigger: build all presets
            echo 'presets=["full","node-pnpm","python","python-prefect","python-airflow","python-dagster","ts-temporal"]' >> "$GITHUB_OUTPUT"
          else
            # Detect changes since last commit on main
            changed_files=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^images/presets/' || true)

            presets=()
            if echo "$changed_files" | grep -q 'images/presets/full/'; then presets+=("full"); fi
            if echo "$changed_files" | grep -q 'images/presets/node-pnpm/'; then presets+=("node-pnpm"); fi
            if echo "$changed_files" | grep -q 'images/presets/python/'; then presets+=("python"); fi
            if echo "$changed_files" | grep -q 'images/presets/python-prefect/'; then presets+=("python-prefect"); fi
            if echo "$changed_files" | grep -q 'images/presets/python-airflow/'; then presets+=("python-airflow"); fi
            if echo "$changed_files" | grep -q 'images/presets/python-dagster/'; then presets+=("python-dagster"); fi
            if echo "$changed_files" | grep -q 'images/presets/ts-temporal/'; then presets+=("ts-temporal"); fi

            # If Makefile changed, build all
            if echo "$changed_files" | grep -q 'Makefile'; then
              presets=("full" "node-pnpm" "python" "python-prefect" "python-airflow" "python-dagster" "ts-temporal")
            fi

            # Convert to JSON array
            json_array=$(printf '%s\n' "${presets[@]}" | jq -R . | jq -s -c .)
            echo "presets=$json_array" >> "$GITHUB_OUTPUT"
            echo "Changed presets: $json_array"
          fi

  build:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.presets != '[]'
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        preset: ${{ fromJSON(needs.detect-changes.outputs.presets) }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Dev Container CLI
        run: npm install -g @devcontainers/cli@0.80.1

      - uses: docker/setup-qemu-action@v3

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push preset image
        env:
          PRESET: ${{ matrix.preset }}
        run: |
          set -euo pipefail
          export BUILDKIT_COLLECT_BUILD_INFO=1
          export BUILDKIT_SBOM_SCAN_STAGE=export
          devcontainer build \
            --workspace-folder images/presets/${PRESET} \
            --image-name ${REGISTRY}/${PRESET}:${TAG} \
            --build-arg GIT_SHA=${GITHUB_SHA} \
            --platform linux/amd64,linux/arm64 \
            --push \
            --provenance=false
