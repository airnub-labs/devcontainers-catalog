version: "3.9"
x-airflow-common: &airflow-common
  image: apache/airflow:2.9.3
  environment:
    AIRFLOW__CORE__LOAD_EXAMPLES: "false"
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@airflow-db:5432/airflow
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    _AIRFLOW_WWW_USER_USERNAME: ${AIRFLOW_ADMIN_USER:-admin}
    _AIRFLOW_WWW_USER_PASSWORD: ${AIRFLOW_ADMIN_PASS:-admin}
  volumes:
    - airflow-dags:/opt/airflow/dags
    - airflow-logs:/opt/airflow/logs
  depends_on:
    - airflow-db
  networks: [classroom]

services:
  airflow-db:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - airflow-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks: [classroom]

  airflow-init:
    <<: *airflow-common
    entrypoint: /bin/bash
    command:
      - -lc
      - >
        airflow db init &&
        airflow users create
        --role Admin
        --username "$${_AIRFLOW_WWW_USER_USERNAME}"
        --password "$${_AIRFLOW_WWW_USER_PASSWORD}"
        --firstname Air --lastname Flow --email admin@example.com
    depends_on:
      airflow-db:
        condition: service_healthy

  airflow-webserver:
    <<: *airflow-common
    command: airflow webserver
    ports:
      - "8080:8080"
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

  airflow-scheduler:
    <<: *airflow-common
    command: airflow scheduler
    depends_on:
      airflow-webserver:
        condition: service_healthy

volumes:
  airflow-db-data:
  airflow-dags:
  airflow-logs:

networks:
  classroom: { name: classroom }
